from django import forms
from . import models 
from django.contrib.auth.models import User
from django.contrib.auth.forms import UserCreationForm
from django.forms import ModelForm
from cbt2.customvalidators import validate_email_unique
from django.utils.crypto import get_random_string
from django.conf import settings

CHOICES=[ 
    ('1','just recieve e-mail update'),
    ('2','email update and view profile'),
    ('3','email update,view profile and forum update') 
 ]

GENDER_CHOICES=[
    ('female','FEMALE'),
    ('male','FEMALE'),
    ('other','OTHER'),

]   
"""
this is a function to generate random unique id of alphanumeric characters of length 25
it is not used any where if you want u can use this function to generate unique strings 
"""
def random_uid():                                                                           
    unique_id=get_random_string(length=25)
    return unique_id

"""
this is the Model form for user sign up. I have used django's UserCreationForm (https://docs.djangoproject.com/en/1.8/_modules/django/contrib/auth/forms/#UserCreationForm)
for creating auto validated form generated by django and added a custom validator in the EmailField for unique email verification
this form have 5 field to display on the form defined in the field variable in in the Meta class 
'fields' variable and 1 additional "email" field 
I have also overrided the save method to take the email before saving the user the save method return an object of User
"""
class signupform(UserCreationForm):
    email = forms.EmailField(required=True,validators=[validate_email_unique])
    class Meta:
        model = User
        fields = ('username','email','password1','password2',)

    def save(self, commit=True):
        user = super(UserCreationForm, self).save(commit=False)
        user.email = self.cleaned_data['email']
        user.set_password(self.cleaned_data['password1'])
        if commit:
            user.save()
        return user 

"""
this form is created for taking userdetails as input. I have created this form using django's ModelForm (https://docs.djangoproject.com/en/1.8/topics/forms/modelforms/)
it has all the fields of model specified in the Meta class model field except the field(s) in the exclude set in class Meta
"""
class userdetails(forms.ModelForm):
    ph=forms.CharField(max_length=10, min_length=10)
    
    class Meta:
        model=models.Customuserprofile
        exclude=['user','avatar','phonenumber']
        #fields='__all__'
        widgets={
            #'gender':forms.ChoiceField(),
        }
        #def save(self,uid,commit=True):
#"""
"""
this is a form created for filing the family details of the user using django's ModelForm (https://docs.djangoproject.com/en/1.8/topics/forms/modelforms/)
this form have all field of model Familymember (in class Meta field model) except the field(s) specified in exclude set and a replace ment of field phonenumber 
is field pf to validate it's length equal to 10
"""
class familydetails(forms.ModelForm):
    ph=forms.CharField(max_length=10, min_length=10)
    class Meta:
        model=models.Familymembers
        exclude=['user','involvementid','phonenumber']
           
"""
this is a form used to take user's family member's involvement extent in his/her therapy it is created using django's (form https://docs.djangoproject.com/en/1.8/topics/forms/)
it contain's only 1 field involvement also this field can have value from a possible set (CHOICES)
"""
class involvement(forms.Form):
    involvement=forms.ChoiceField(widget=forms.RadioSelect,choices=CHOICES)